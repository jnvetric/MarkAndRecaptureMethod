# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterfacebtInterface.transmitSpeed = 250kbtInterface.transmitRange = 10# Common settings for all groups#Group.router = ShortestPathMapBasedMovementGroup.router = DecisionEngineRouterDecisionEngineRouter.decisionEngine = SprayAndWaitRouterDEDecisionEngineRouter.binaryMode = true#DecisionEngineRouter.nrofCopies = 5DecisionEngineRouter.nrofMark = 15DecisionEngineRouter.recaptureInterval = 36000Scenario.nrofHostGroups = 10## TTL 24 hours=1440, 1 week= 10080, 3 weeks= 30240GGroup.msgTtl = 1440Group.nrofInterfaces = 1Group.interface1 = btInterfaceGroup.bufferSize = 2024MGroup.movementModel = StationaryMovementGroup.nodeLocation = 10, 10Group.waitTime = 20, 50Group.speed = 0.5, 1.5Group1.groupID = ObserverGroup1.movementModel = ObsMovementGroup1.moveArea = 1Group1.speed = 0.5, 1.5Group1.nrofHosts = 1Group2.groupID = ObserverGroup2.movementModel = ObsMovementGroup2.moveArea = 2Group2.speed = 0.5, 1.5Group2.nrofHosts = 1Group3.groupID = ObserverGroup3.movementModel = ObsMovementGroup3.moveArea = 3Group3.speed = 0.5, 1.5Group3.nrofHosts = 1Group4.groupID = ObserverGroup4.movementModel = ObsMovementGroup4.moveArea = 4Group4.speed = 0.5, 1.5Group4.nrofHosts = 1Group5.groupID = ObserverGroup5.movementModel = ObsMovementGroup5.moveArea = 5Group5.speed = 0.5, 1.5Group5.nrofHosts = 1Group6.groupID = ObserverGroup6.movementModel = ObsMovementGroup6.moveArea = 6Group6.speed = 0.5, 1.5Group6.nrofHosts = 1Group7.groupID = ObserverGroup7.movementModel = ObsMovementGroup7.moveArea = 7Group7.speed = 0.5, 1.5Group7.nrofHosts = 1Group8.groupID = ObserverGroup8.movementModel = ObsMovementGroup8.moveArea = 8Group8.speed = 0.5, 1.5Group8.nrofHosts = 1Group9.groupID = ObserverGroup9.movementModel = ObsMovementGroup9.moveArea = 9Group9.speed = 0.5, 1.5Group9.nrofHosts = 1Group10.groupID = CrowdGroup10.nrofHosts = 88## Message creation parameters # How many event generatorsEvents.nrof = 2# Class of the first event generatorEvents1.class = ExternalEventsQueueEvents1.filePath = RealityConnectionTraceFinal.txt#Events1.filePath = Haggle3-Infocom5.csv#Events1.filePath = Haggle4-Cam-Imote.csvEvents2.class = MessageEventGeneratorEvents2.interval = 290, 310Events2.size = 10k ## range of message source/destination address Events2.hosts = 0, 96# 0, 35 Haggle Cam# 0,40 Haggle# 0,96 RealityEvents2.prefix = M## Movement model settingsMovementModel.rngSeed = 1MovementModel.worldSize = 150, 150MovementModel.warmup = 1000## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 2Report.warmup = 0Report.reportDir = reports/RealityIsActive-m&r# Report classes to loadReport.report1 = MarkAndRecaptureReport_2Report.report2 = MessageStatsReport## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$