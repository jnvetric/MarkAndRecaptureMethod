Scenario.name = Perbandingan copies SnWScenario.endTime = 864000Group.router = DecisionEngineRouterGroup.msgTtl = 3600Group.bufferSize = 2024MGroup.waitTime = 0, 120# All nodes have the wirelessLan interfaceGroup.nrofInterfaces = 1#Group.interface1 = wirelessLanGroup.interface1 = btInterfaceDecisionEngineRouter.decisionEngine = SprayAndWaitRouterDecisionEngineDecisionEngineRouter.binaryMode = trueScenario.updateInterval = 0.1DecisionEngineRouter.nrofCopies = 5Scenario.nrofHostGroups = 1 btInterface.type = SimpleBroadcastInterfacebtInterface.transmitSpeed = 250kbtInterface.transmitRange = 100#wirelessLan.type = SimpleBroadcastInterface#wirelessLan.transmitSpeed = 100k#wirelessLan.transmitRange = 50Group1.groupID = AGroup1.movementModel = RandomWaypointGroup1.speed = 0.5, 1.5Group1.nrofHosts = 59## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000Events1.hosts = 0, 58# Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25, 35# Message sizes (500kB - 1MB)Events1.size = 10k# range of message source/destination addresses# Message ID prefixEvents1.prefix = M# how many reports to loadReport.nrofReports = 1Report.warmup = 0Report.reportDir = reports/perbandingan# Report classes to loadReport.report1 = MessageStatsReport## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$